---
# creating configmap
apiVersion: v1
kind: ConfigMap
metadata:
  name: flask-color-changer-config
data:
  LOG_LEVEL: "INFO"  # Options: DEBUG, INFO, ERROR, etc.
  DEFAULT_COLOR: "blue"  # Default color to use
---
# deployment file
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-color-changer
  labels:
    app: flask-color-changer
spec:
  replicas: 1  # Number of pods
  selector:
    matchLabels:
      app: flask-color-changer
  template:
    metadata:
      labels:
        app: flask-color-changer
    spec:
      containers:
      - name: flask-color-changer
        image: akhil1993/flask-color-changer:latest  # Replace with your Docker Hub image
        ports:
        - containerPort: 5000
        volumeMounts:
        - name: log-volume
          mountPath: /app/logs  # Mount logs directory inside the container
        env:
        - name: LOG_LEVEL
        valueFrom:
          configMapKeyRef:
            name: flask-color-changer-config
            key: LOG_LEVEL
        - name: DEFAULT_COLOR  # Inject DEFAULT_COLOR from ConfigMap
        valueFrom:
          configMapKeyRef:
            name: flask-color-changer-config
            key: DEFAULT_COLOR
      volumes:
      - name: log-volume
        emptyDir: {}  # Ephemeral storage for logs
---
# services
apiVersion: v1
kind: Service
metadata:
  name: flask-color-changer-service
spec:
  selector:
    app: flask-color-changer
  ports:
  - protocol: TCP
    port: 5000
    targetPort: 5000
  type: NodePort  # Exposes the service on a high-range port on each node
